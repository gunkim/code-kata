@startuml
'https://plantuml.com/class-diagram

class Word {
  +letters: List<Letter>
  +length: Int
  +value: String
  --
  {static} fun of(word: String): Word
}
class Letter {
  +value: String
}
class Player {
  +problem: Word
  +letters: SortedMap<Int, Letter>
  --
  +fun hit(letter: Letter): Player
  +fun isComplete(): Boolean
}
interface Words {
  +fun findRandom(): Word
}
class FileReadWords {
  -val fileName: String
  --
  +fun findRandom(): Word
}
interface FindWord {
  +fun find(): Word
}
class DefaultFindWord {
  -val words: Words
  --
  +fun find(): Word
}
enum Hangman {
  +LEVEL1
  +LEVEL2
  +LEVEL3
  +LEVEL4
  +LEVEL5
  +LEVEL6
  +LEVEL7
  --
  +fun next(): Hangman
  +fun isDead(): Boolean
}

Word -> Letter
Word <-- Player
Words <|-- FileReadWords
FindWord <|-- DefaultFindWord

@enduml
